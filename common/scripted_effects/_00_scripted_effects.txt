war_already = {
	every_country = {
		declare_war_on = {
			target = ROOT
			type = annex_puppet_wargoal
		}
	}
}
war_this = {
	FROM = {
		declare_war_on = {
			target = ROOT
			type = annex_puppet_wargoal
		}
	}
}

###

replace_civ_with_arms_factories = {

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_puppet_wargoal } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_puppet_wargoal }
		}
	}
}

print_variable_log_effect = {
	print_variables = {
		file = variables_yug
		append = yes
	}
}

civil_war_anti_exploiter_punitive_action = {
	# Anti-exploiter punitive brigades! BET YA DIDN'T SEE THAT COMING DID YA?!
	if = {
		limit = {
			has_army_size = {
				 size < 1
			}
		}
		division_template = {
			name = "Anti-Exploit Punitive Brigade"
			priority = 1
			#division_names_group = ENG_MAR_01
			is_locked = yes
			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }

				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }

				infantry = { x = 2 y = 0 }
				artillery_brigade = { x = 2 y = 1 }
				artillery_brigade = { x = 2 y = 2 }
			}
			support = {
				engineer = { x = 0 y = 0 }
				recon = { x = 0 y = 1 }
				artillery = { x = 0 y = 2 }
			}
		}
		random_state = {
			limit = {
				is_capital = yes
				is_fully_controlled_by = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
		}
		random_state = {
			limit = {
				is_in_home_area = yes
				is_fully_controlled_by = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
		}
		random_state = {
			limit = {
				is_in_home_area = yes
				is_fully_controlled_by = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
		}
		random_state = {
			limit = {
				is_in_home_area = yes
				is_fully_controlled_by = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
		}
		random_state = {
			limit = {
				is_in_home_area = yes
				is_fully_controlled_by = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
			create_unit = {
				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
				owner = PREV
			}
		}
	}
}

clear_sabotaged_resources_if_necesary = {
	if = {
		limit = {
			not = {
				has_dynamic_modifier = {
					modifier = sabotaged_resources
				}
			}
		}

		clear_variable = sabotaged_energy
		clear_variable = sabotaged_polymers
		clear_variable = sabotaged_lithium
		clear_variable = sabotaged_electronics
		clear_variable = sabotaged_superalloys
		clear_variable = sabotaged_superconductors
	}
}

#expectes a temp variable country_to_initiate which should contain original_tag to instantiate as a collabration government
instantiate_collaboration_government = {
	custom_effect_tooltip = compliance_80_effect_tooltip
	hidden_effect = {
		set_variable = { collaboration_formed@var:country_to_initiate = 1 }

		if = {
			# if country_to_initiate does not exist, simply release it as a puppet
			limit = {
				var:country_to_initiate = {
					exists = no
				}
			}
			var:country_to_initiate = { set_variable = { collaboration_formed_by = PREV } }
			release_autonomy = {
				target = country_to_initiate
				autonomy_state = autonomy_puppet
				freedom_level = 0.5
				release_non_owned_controlled = yes
			}
		}
		else = {
			# if country_to_initiate exists, create a dynamic country as our new puppet

			create_dynamic_country = {
				original_tag = country_to_initiate

				set_variable = { collaboration_formed_by = PREV }
				set_temp_variable = { new_country = this }

				PREV = {
					every_controlled_state = {
						limit = { occupied_country_tag = country_to_initiate }

						var:new_country = {
							transfer_state = PREV
						}
					}

					puppet = new_country

					set_autonomy = {
						target = new_country
						autonomy_state = autonomy_puppet
						freedom_level = 0.5
					}
				}
			}
		}
	}
}

###

puppet_government_too = {
	THIS = {
		if = {
			limit = {
				is_puppet = yes
			}
			color_that = yes
			load_focus_tree = generic_focus
			retire_ideology_leader = neutral
			retire_ideology_leader = harmony
			retire_ideology_leader = purity
			retire_ideology_leader = divinity
			retire_ideology_leader = synergy
			retire_ideology_leader = mastery
			retire_ideology_leader = supremacy
			create_country_leader = {
				name = "Goverment"
				picture = GFX_government_portrait
				ideology = purity_ideology
			}
			create_country_leader = {
				name = "Goverment"
				picture = GFX_government_portrait
				ideology = harmony_ideology
			}
			create_country_leader = {
				name = "Goverment"
				picture = GFX_government_portrait
				ideology = supremacy_ideology
			}
			create_country_leader = {
				name = "Goverment"
				picture = GFX_government_portrait
				ideology = neutral_ideology
			}
			create_country_leader = {
				name = "Goverment"
				picture = GFX_government_portrait
				ideology = synergy_ideology
			}
			create_country_leader = {
				name = "Goverment"
				picture = GFX_government_portrait
				ideology = mastery_ideology
			}
			create_country_leader = {
				name = "Goverment"
				picture = GFX_government_portrait
				ideology = divinity_ideology
			}
			add_ideas = volunteer_only
			if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = oligarchic_government
					}
				}
				add_ideas = oligarchic_government
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = minarchist_state
					}
				}
				add_ideas = minarchist_state
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = digital_democracy
					}
				}
				add_ideas = digital_democracy
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = communal_parity
					}
				}
				add_ideas = communal_parity
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = autocratic_authority
					}
				}
				add_ideas = autocratic_authority
			}
			else = {
				#
			}
			#
			if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = civilian_economy
					}
				}
				add_ideas = civilian_economy
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = low_economic_mobilisation
					}
				}
				add_ideas = low_economic_mobilisation
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = partial_economic_mobilisation
					}
				}
				add_ideas = partial_economic_mobilisation
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = war_economy
					}
				}
				add_ideas = war_economy
			}
			else = {
				#
			}
			#
			if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = free_trade
					}
				}
				add_ideas = free_trade
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = export_focus
					}
				}
				add_ideas = export_focus
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = limited_exports
					}
				}
				add_ideas = limited_exports
			}
			else_if = {
				limit = {
					THIS.OVERLORD = {
						has_idea = closed_economy
					}
				}
				add_ideas = closed_economy
			}
			else = {
				#
			}
		}
	}
}
