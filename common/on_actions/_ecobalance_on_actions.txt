on_actions = {
	on_nuke_drop = {
		effect = {
			FROM = {
				increase_ecobalance = yes
			}
		}
	}
###
	on_startup = {
		effect = {
			every_possible_country = {
				set_country_flag = auto_ecobalance_states
			}
            every_state = {
				if = {
					limit = {
						OR = {
							state = 16
							state = 14
						}
					}
					add_dynamic_modifier = {
						modifier = terminal_ecobalance
					}
				}
				else_if = {
					limit = {
						OR = {
							state = 688
							state = 949
						}
					}
					add_dynamic_modifier = {
						modifier = significant_ecobalance
					}
				}
				else_if = {
					limit = {
						OR = {
							state = 18
							state = 19
							state = 949
							state = 687
							state = 694
						}
					}
					add_dynamic_modifier = {
						modifier = major_ecobalance
					}
				}
				else_if = {
					limit = {
						OR = {
							state = 113
							state = 13
							state = 23
							state = 734
							state = 789
						}
					}
					add_dynamic_modifier = {
						modifier = notable_ecobalance
					}
				}
				else_if = {
					limit = {
						OR = {
							#has_resources_amount = {
							#	resource = energy
							#	amount > 100
							#}
							has_resources_amount = {
								resource = polymers
								amount > 100
							}
							has_resources_amount = {
								resource = lithium
								amount > 100
							}
							has_resources_amount = {
								resource = electronics
								amount > 100
							}
							has_resources_amount = {
								resource = superalloys
								amount > 100
							}
							has_resources_amount = {
								resource = superconductors
								amount > 100
							}
							OR = {
								check_variable = {
									building_level@civilian_complex > 5
								}
								check_variable = {
									building_level@military_complex > 5
								}
							}
						}
					}
					add_dynamic_modifier = {
						modifier = significant_ecobalance
					}
				}
				else_if = {
					limit = {
						OR = {
							#has_resources_amount = {
							#	resource = energy
							#	amount > 50
							#}
							has_resources_amount = {
								resource = polymers
								amount > 50
							}
							has_resources_amount = {
								resource = lithium
								amount > 50
							}
							has_resources_amount = {
								resource = electronics
								amount > 50
							}
							has_resources_amount = {
								resource = superalloys
								amount > 50
							}
							has_resources_amount = {
								resource = superconductors
								amount > 50
							}
							OR = {
								check_variable = {
									building_level@civilian_complex > 2
								}
								check_variable = {
									building_level@military_complex > 2
								}
							}
						}
					}
					add_dynamic_modifier = {
						modifier = major_ecobalance
					}
				}
				else_if = {
					limit = {
						OR = {
							#has_resources_amount = {
							#	resource = energy
							#	amount > 10
							#}
							has_resources_amount = {
								resource = polymers
								amount > 10
							}
							has_resources_amount = {
								resource = lithium
								amount > 10
							}
							has_resources_amount = {
								resource = electronics
								amount > 10
							}
							has_resources_amount = {
								resource = superalloys
								amount > 10
							}
							has_resources_amount = {
								resource = superconductors
								amount > 10
							}
						}
					}
					add_dynamic_modifier = {
						modifier = notable_ecobalance
					}
				}
				else = {
					add_dynamic_modifier = {
						modifier = minor_ecobalance
					}
				}
            }
			every_state = { #fires of Siberia
				if = {
					limit = {
						OR = {
							is_owned_by = SIB
							is_owned_by = URA
						}
					}
					increase_ecobalance = yes
				}
			}
			every_country = {
				limit = {
					has_terrain = desert
				}
				every_owned_state = {
					increase_ecobalance = yes
				}
			}
			###
            every_country = {
                set_variable = { ecobalance_timeout = 60 }
				calculate_current_ecobalance = yes
                set_variable = { max_ecobalance = num_owned_states }
                multiply_variable = { max_ecobalance = 4 }
                set_variable = { ecobalance_ratio = ROOT.current_ecobalance }
                divide_variable = { ecobalance_ratio = max_ecobalance }
				if = {
					limit = {
						check_variable = { ecobalance_ratio < 0.01 }
					}
					add_ideas = optimum_ecobalance
				}
				else_if = {
					limit = {
						check_variable = { ecobalance_ratio < 0.2 }
					}
					add_ideas = favorable_ecobalance
				}
				else_if = {
					limit = {
						check_variable = { ecobalance_ratio < 0.4 }
					}
					add_ideas = neutral_ecobalance
				}
				else_if = {
					limit = {
						check_variable = { ecobalance_ratio < 0.6 }
					}
					add_ideas = precarious_ecobalance
				}
				else_if = {
					limit = {
						check_variable = { ecobalance_ratio < 0.8 }
					}
					add_ideas = dangerous_ecobalance
				}
				else = {
					add_ideas = disastrous_ecobalance
				}
            }
        }
    }
	on_daily = {
		effect = {
			random_country = {
            	subtract_from_variable = { ecobalance_timeout = 1 }
				if = {
					limit = {
						check_variable = { ecobalance_timeout = 0 }
					}
					set_variable = { anti_threat = threat }
					set_variable = { ecobalance_chance = threat }
					add_to_variable = { anti_threat = -1 }
					multiply_variable = { anti_threat = -1 }
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					random_list = {
						var:ecobalance_chance = {
							increase_ecobalance_random_state = yes
						}
						var:anti_threat = {
							#
						}
					}
					add_to_variable = { ecobalance_timeout = 60 }
				}
				else = {
					#
				}
			}
        }
    }
	on_weekly = {
		effect = {
			calculate_current_ecobalance = yes
            set_variable = { max_ecobalance = num_owned_states }
            multiply_variable = { max_ecobalance = 4 }
            set_variable = { ecobalance_ratio = ROOT.current_ecobalance }
            divide_variable = { ecobalance_ratio = max_ecobalance }
			if = {
				limit = {
					check_variable = { ecobalance_ratio < 0.01 }
				}
				add_ideas = optimum_ecobalance
			}
			else_if = {
				limit = {
					check_variable = { ecobalance_ratio < 0.2 }
				}
				add_ideas = favorable_ecobalance
			}
			else_if = {
				limit = {
					check_variable = { ecobalance_ratio < 0.4 }
				}
				add_ideas = neutral_ecobalance
			}
			else_if = {
				limit = {
					check_variable = { ecobalance_ratio < 0.6 }
				}
				add_ideas = precarious_ecobalance
			}
			else_if = {
				limit = {
					check_variable = { ecobalance_ratio < 0.8 }
				}
				add_ideas = dangerous_ecobalance
			}
			else = {
				add_ideas = disastrous_ecobalance
			}
		}
	}
	###
	on_monthly = {
		effect = {
			random_country = {
				set_variable = { global.total_global_ecobalance = 0 }
				if = {
					limit = {
						threat < 1
					}
					every_state = {
						if = {
							limit = {
								has_dynamic_modifier = {
									modifier = terminal_ecobalance
								}
							}
							add_to_variable = {
								global.total_global_ecobalance = 4
							}
						}
						else_if = {
							limit = {
								has_dynamic_modifier = {
									modifier = significant_ecobalance
								}
							}
							add_to_variable = {
								global.total_global_ecobalance = 3
							}
						}
						else_if = {
							limit = {
								has_dynamic_modifier = {
									modifier = major_ecobalance
								}
							}
							add_to_variable = {
								global.total_global_ecobalance = 2
							}
						}
						else_if = {
							limit = {
								has_dynamic_modifier = {
									modifier = notable_ecobalance
								}
							}
							add_to_variable = {
								global.total_global_ecobalance = 1
							}
						}
						else = {
							#
						}
					}
				}
				if = {
					limit = {
						threat > 0
						threat < 1
					}
					every_state = {
						limit = {
							has_dynamic_modifier = {
								modifier = no_ecobalance
							}
						}
						add_to_variable = {
							global.total_global_ecobalance = -4
						}
					}
				}
				divide_variable = { global.total_global_ecobalance = 1000 }
				every_country = {
					limit = {
						owns_state = 333
					}
					add_named_threat = { 
						threat = global.total_global_ecobalance
						name = total_global_ecobalance_added
					}
				}
			}
		}
	}
	###
	on_weekly = {
		effect = {
			if = {
				limit = {
					is_ai = no
					has_country_flag = auto_ecobalance_states
					check_variable = {
						industrial_power > 200
					}
				}
				if = {
					limit = {
						has_country_flag = has_mind_tier3
					}
					subtract_from_variable = { industrial_power = 15 }	
					random_owned_state = {
						limit = {
							NOT = {
								has_state_flag = ecobalance_reduction_timeout_flag
							}
						}
						decrease_ecobalance = yes
						set_state_flag = {
							flag = ecobalance_reduction_timeout_flag
							value = 1
							days = 60
						}
					}				
				}
				else_if = {
					limit = {
						has_country_flag = has_body_tier3
					}
					subtract_from_variable = { industrial_power = 40 }	
					random_owned_state = {
						limit = {
							NOT = {
								has_state_flag = ecobalance_reduction_timeout_flag
							}
						}
						engineered_ecobalance = yes
						set_state_flag = {
							flag = ecobalance_reduction_timeout_flag
							value = 1
							days = 60
						}
					}				
				}
				else = {
					subtract_from_variable = { industrial_power = 25 }
					random_owned_state = {
						limit = {
							NOT = {
								has_state_flag = ecobalance_reduction_timeout_flag
							}
						}
						decrease_ecobalance = yes
						set_state_flag = {
							flag = ecobalance_reduction_timeout_flag
							value = 1
							days = 60
						}
					}
				}
			}
		}
	}
}